class Solution {
public:
    int ladderLength(string start, string end, unordered_set<string> &dict) {
        if(start == end) return 1;
        int len = 1;
        unordered_set<string> visited;
        queue<string> qs, next;
        qs.push(start);
        while(!qs.empty() || !next.empty()) {
            if(qs.empty()) {
                swap(qs, next);
                len++;
            }
            string now = qs.front();
            qs.pop();
            for(int i = 0; i < now.size(); i++) {
                for(int j = 'a'; j<'z'; j++) {
                    if(now[i] == j) {
                        continue;
                    }
                    string a = now;
                    a[i] = j;
                    if(a == end) {
                        return ++len;
                    }
                    if(dict.find(a) == dict.end()) {
                        continue;
                    }
                    if(visited.find(a) != visited.end()) {
                        continue;
                    } else {
                        next.push(a);
                        visited.insert(a);
                    }
                }
            }
        }
        return 0;
    }
};